{"version":3,"sources":["containers/Board/Board.module.scss","components/Card/Card.module.scss","containers/Layout/Layout.module.scss","components/Loader/Loader.module.scss","components/Card/Card.jsx","containers/Board/Board.jsx","data/boards.js","hooks/useBoards.jsx","functions/randomNumberGen.js","assets/images/spinner.svg","components/Loader/Loader.jsx","containers/Layout/Layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","card","onBlurEvent","isEditable","className","styles","onDragStart","e","target","style","opacity","dataTransfer","effectAllowed","setData","id","onDragEnd","draggable","card__input","autoFocus","placeholder","onKeyDown","key","onBlur","card__label","label","Board","list","onAddTask","onMoveTask","useState","newCard","setNewCard","boardRef","useRef","ref","board","onDragOver","preventDefault","onDragEnter","current","classList","add","el","contains","onDragLeave","remove","onDrop","stopPropagation","cardId","getData","Array","from","document","querySelectorAll","forEach","board__header","boardLabel","board__content","cards","map","item","event","persist","value","board__footer","board__footer__label","onClick","boardJSON","BOARD_KEY","useBoards","data","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","addTask","board_id","minimum","maximum","cloned","find","push","Math","floor","random","moveTask","task_id","movedItem","foundIndex","findIndex","task","splice","_extends","Object","assign","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","fill","fillRule","transform","strokeWidth","strokeOpacity","cx","cy","r","d","attributeName","type","to","dur","repeatCount","SvgSpinner","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","stroke","ForwardRef","Loader","loader","Layout","boardsData","lists","lists__content","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qHACAA,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,eAAiB,8BAA8B,cAAgB,6BAA6B,qBAAuB,sC,mBCAlLD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,4B,iBCA1DD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,eAAiB,iC,kBCAjED,EAAOC,QAAU,CAAC,OAAS,yB,wLC6CZC,EA5CF,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,YAAsC,IAAzBC,kBAAyB,SAsB3D,OACC,qBACCC,UAAWC,IAAOJ,KAClBK,YAvBmB,SAACC,GACZA,EAAEC,OACRC,MAAMC,QAAU,MACnBH,EAAEI,aAAaC,cAAgB,OAC/BL,EAAEI,aAAaE,QAAQ,aAAcZ,EAAKa,KAoBzCC,UAhBgB,SAACR,GACTA,EAAEC,OACRC,MAAMC,QAAU,KAelBM,WAAYb,EAJb,SAMGA,EAGD,uBACCC,UAAWC,IAAOY,YAClBC,WAAS,EACTC,YAAY,8BACZC,UApBkB,SAACb,GACR,UAAVA,EAAEc,KACLnB,EAAYK,IAmBVe,OAAQpB,IAPT,sBAAME,UAAWC,IAAOkB,YAAxB,SAAsCtB,EAAKuB,WCsEhCC,EAlGD,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAAiB,EACpBC,mBAAS,MADW,mBAC3CC,EAD2C,KAClCC,EADkC,KAE5CC,EAAWC,iBAAO,MAgExB,OACC,sBACCC,IAAKF,EACL5B,UAAWC,IAAO8B,MAClBC,WA/CiB,SAAC7B,GAKnB,OAJIA,EAAE8B,gBACL9B,EAAE8B,kBAGI,GA2CNC,YArCkB,SAAC/B,GACpByB,EAASO,QAAQC,UAAUC,IAAI,QAC/B,IAAMC,EAAKnC,EAAEC,OACTkC,EAAGF,UAAUG,SAAS,SACzBD,EAAGF,UAAUC,IAAI,SAkCjBG,YA7BkB,SAACrC,GACTA,EAAEC,OACVgC,UAAUK,OAAO,SA4BnBC,OArBa,SAACvC,GACfA,EAAEwC,kBACF,IAAMC,EAASzC,EAAEI,aAAasC,QAAQ,cAStC,OARW1C,EAAEC,OACVgC,UAAUK,OAAO,QACpBK,MAAMC,KAAKC,SAASC,iBAAiB,UAAUC,SAAQ,SAACZ,GAAD,OACtDA,EAAGF,UAAUK,OAAO,WAEjBG,GACHpB,GAAYoB,EAAQtB,EAAKZ,KAEnB,GAIP,UAQC,oBAAIV,UAAWC,IAAOkD,cAAtB,SAAsC7B,EAAK8B,aAC3C,sBAAKpD,UAAWC,IAAOoD,eAAvB,UACE/B,EAAKgC,MAAMC,KAAI,SAACC,GAChB,OAAO,cAAC,EAAD,CAAM3D,KAAM2D,GAAWA,EAAK9C,OAEnCgB,GACA,cAAC,EAAD,CAAM7B,KAAM6B,EAAS3B,YAAY,EAAMD,YA7ExB,SAAC2D,GAEnBA,EAAMC,UACN,IAAMtC,EAAQqC,EAAMrD,OAAOuD,MAEvBvC,GACHG,EAAUH,EAAOE,EAAKZ,IAGvBiB,EAAW,aAuERD,GACD,qBAAK1B,UAAWC,IAAO2D,cAAvB,SACC,wBACC5D,UAAS,UAAKC,IAAO4D,qBAAZ,iBACTC,QAvEc,WAClBnC,EAAW,KAoER,sC,OC/BUoC,EA3DG,CACjB,CACCrD,GAAI,EACJ0C,WAAY,UACZE,MAAO,CACN,CACC5C,GAAI,EACJU,MAAO,gBAER,CACCV,GAAI,EACJU,MAAO,mBAIV,CACCV,GAAI,EACJ0C,WAAY,UACZE,MAAO,CACN,CACC5C,GAAI,EACJU,MAAO,gBAER,CACCV,GAAI,EACJU,MAAO,0BAIV,CACCV,GAAI,EACJ0C,WAAY,OACZE,MAAO,CACN,CACC5C,GAAI,EACJU,MAAO,iBAER,CACCV,GAAI,EACJU,MAAO,wBAIV,CACCV,GAAI,EACJ0C,WAAY,MACZE,MAAO,CACN,CACC5C,GAAI,GACJU,MAAO,YAER,CACCV,GAAI,EACJU,MAAO,qBCjDX,IAAM4C,EAAY,QAoDHC,EAlDG,WAAO,IAAD,EACExC,qBADF,mBACfyC,EADe,KACTzD,EADS,KAIvB0D,qBAAU,WACT,IAAMpC,EAAQqC,aAAaC,QAAQL,GAE/BjC,EACHtB,EAAQ6D,KAAKC,MAAMxC,KAEnBqC,aAAaI,QAAQR,EAAWM,KAAKG,UAAUV,IAC/CtD,EAAQsD,MAEP,IAkCH,MAAO,CAAEG,OAAMQ,QA9BC,SAACtD,EAAOuD,GACvB,ICxBmCC,EAASC,EDwBtCC,EAAM,YAAOZ,GACLY,EAAOC,MAAK,SAACvB,GAAD,OAAUA,EAAK9C,KAAOiE,KAE1CrB,MAAM0B,KAAK,CAChBtE,IC5BkCkE,ED4BjB,GC5B0BC,ED4BtB,IC3BhBI,KAAKC,MAAMD,KAAKE,UAAYN,EAAUD,EAAU,IAAMA,GD4B3DxD,UAEDX,EAAQqE,GACRV,aAAaI,QAAQR,EAAWM,KAAKG,UAAUK,KAqBxBM,SAhBP,SAACC,EAASV,GAC1B,IACIW,EADER,EAAM,YAAOZ,GAEnBY,EAAO5B,SAAQ,SAAAnB,GACd,IAAMwD,EAAaxD,EAAMuB,MAAMkC,WAAU,SAAAC,GAAI,OAAIA,EAAK/E,KAAO2E,KAC7D,GAAIE,GAAc,EAAG,CAAC,IAAD,EACNxD,EAAMuB,MAAMoC,OAAOH,EAAY,GADzB,mBACnBD,EADmB,SAIGR,EAAOC,MAAK,SAACvB,GAAD,OAAUA,EAAK9C,KAAOiE,KAE1CrB,MAAM0B,KAAKM,GAC5B7E,EAAQqE,GACRV,aAAaI,QAAQR,EAAWM,KAAKG,UAAUK,OElDjD,SAASa,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUzF,GAAU,IAAK,IAAI0F,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAI7E,KAAOgF,EAAcL,OAAOM,UAAUC,eAAeC,KAAKH,EAAQhF,KAAQb,EAAOa,GAAOgF,EAAOhF,IAAY,OAAOb,IAA2BiG,MAAMC,KAAMP,WAEhT,SAASQ,EAAyBN,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkEhF,EAAK6E,EAAnE1F,EAEzF,SAAuC6F,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2DhF,EAAK6E,EAA5D1F,EAAS,GAAQqG,EAAab,OAAOc,KAAKT,GAAqB,IAAKH,EAAI,EAAGA,EAAIW,EAAWT,OAAQF,IAAO7E,EAAMwF,EAAWX,GAAQU,EAASG,QAAQ1F,IAAQ,IAAab,EAAOa,GAAOgF,EAAOhF,IAAQ,OAAOb,EAFxMwG,CAA8BX,EAAQO,GAAuB,GAAIZ,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBZ,GAAS,IAAKH,EAAI,EAAGA,EAAIgB,EAAiBd,OAAQF,IAAO7E,EAAM6F,EAAiBhB,GAAQU,EAASG,QAAQ1F,IAAQ,GAAkB2E,OAAOM,UAAUa,qBAAqBX,KAAKH,EAAQhF,KAAgBb,EAAOa,GAAOgF,EAAOhF,IAAU,OAAOb,EAMne,IAAI4G,EAAqB,gBAAoB,IAAK,CAChDC,KAAM,OACNC,SAAU,WACI,gBAAoB,IAAK,CACvCC,UAAW,iBACXC,YAAa,GACC,gBAAoB,SAAU,CAC5CC,cAAe,GACfC,GAAI,GACJC,GAAI,GACJC,EAAG,KACY,gBAAoB,OAAQ,CAC3CC,EAAG,+BACW,gBAAoB,mBAAoB,CACtDC,cAAe,YACfC,KAAM,SACN5E,KAAM,UACN6E,GAAI,YACJC,IAAK,KACLC,YAAa,kBAGf,SAASC,EAAWC,EAAMC,GACxB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQ7B,EAAyByB,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAOrC,EAAS,CACtD0C,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTC,OAAQ,OACR3G,IAAKmG,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DxH,GAAIyH,GACHD,GAAS,KAAMlB,GAGpB,IAAI0B,EAA0B,aAAiBX,G,GAChC,I,gBCtCAY,EARA,WACd,OACC,qBAAK3I,UAAWC,IAAO2I,OAAvB,SACC,cAAC,EAAD,OC2BYC,EA5BA,WAAO,IAAD,EAC6B5E,IAAlC6E,EADK,EACX5E,KAAkBQ,EADP,EACOA,QAASU,EADhB,EACgBA,SAEnC,IAAK0D,EACH,OAAO,cAAC,EAAD,IAGT,IAAMvH,EAAY,SAACH,EAAOuD,GACxBD,EAAQtD,EAAOuD,IAGXnD,EAAa,SAAC6D,EAASV,GAC3BS,EAASC,EAASV,IAGrB,OACC,qBAAK3E,UAAWC,IAAO8I,MAAvB,SACED,EAAWvF,KAAI,SAACC,GAChB,OACC,qBAAKxD,UAAWC,IAAO+I,eAAvB,SACC,cAAC,EAAD,CAAO1H,KAAMkC,EAAMjC,UAAWA,EAAWC,WAAYA,KADVgC,EAAK9C,U,MCbvCuI,MARf,WACE,OACE,qBAAKjJ,UAAU,MAAf,SACE,cAAC,EAAD,OCMSkJ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7G,SAAS8G,eAAe,SAM1BZ,M","file":"static/js/main.fb46c0bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"board__header\":\"Board_board__header__2fgKF\",\"board__content\":\"Board_board__content__36nS4\",\"board__footer\":\"Board_board__footer__1FKJG\",\"board__footer__label\":\"Board_board__footer__label__2FAhi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__35wN0\",\"card__input\":\"Card_card__input__BTZ1P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lists\":\"Layout_lists__2ErDW\",\"lists__content\":\"Layout_lists__content__BbBB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2hZcM\"};","import styles from './Card.module.scss';\n\nconst Card = ({ card, onBlurEvent, isEditable = false }) => {\n\t// when drag starts on the card, we reduce the opacity and set the data in transfer data\n  const onDragStart = (e) => {\n\t\tlet el = e.target;\n\t\tel.style.opacity = \"0.4\";\n\t\te.dataTransfer.effectAllowed = \"move\";\n\t\te.dataTransfer.setData(\"text/plain\", card.id);\n\t}\n\n\t// restore the opacity on drag ending\n\tconst onDragEnd = (e) => {\n\t\tlet el = e.target;\n\t\tel.style.opacity = \"1\";\n\t};\n\n\t// handle card add on enter key along with blur event\n\tconst handleKeyDown = (e) => {\n\t\tif (e.key === \"Enter\") {\n\t\t\tonBlurEvent(e);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={styles.card}\n\t\t\tonDragStart={onDragStart}\n\t\t\tonDragEnd={onDragEnd}\n\t\t\tdraggable={!isEditable}\n\t\t>\n\t\t\t{!isEditable ? (\n\t\t\t\t<span className={styles.card__label}>{card.label}</span>\n\t\t\t) : (\n\t\t\t\t<input\n\t\t\t\t\tclassName={styles.card__input}\n\t\t\t\t\tautoFocus\n\t\t\t\t\tplaceholder=\"Enter a title for this card\"\n\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\tonBlur={onBlurEvent}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Card;\n","import styles from './Board.module.scss';\nimport Card from 'components/Card/Card';\nimport { useRef, useState } from 'react';\n\nconst Board = ({ list, onAddTask, onMoveTask }) => {\n\tconst [newCard, setNewCard] = useState(null);\n\tconst boardRef = useRef(null);\n\n\tconst onBlurCard = (event) => {\n\t\t// persist the event since we are passing it forward | Synthetic Event\n\t\tevent.persist();\n\t\tconst label = event.target.value;\n\t\t// If label wasn't empty add this to localstorage and re render\n\t\tif (label) {\n\t\t\tonAddTask(label, list.id);\n\t\t}\n\t\t// hide the add card box\n\t\tsetNewCard(null);\n\t};\n\n\t// when add new card button is clicked a empty cardbox with input focussed opens up\n\tconst addNewCard = () => {\n\t\tsetNewCard({});\n\t};\n\n\t/* In the case of dragging something a link, prevent the browser's default behavior, \n\twhich is to navigate to that link */\n\tconst onDragOver = (e) => {\n\t\tif (e.preventDefault) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\treturn false;\n\t};\n\n\t/* drag enter used to add a border to dotted hovered column and a pointer events none class added\n\t to parent to defer any drag event on nested children. Drag Over can also be used for the same,\n\t but the triggers for dragover are too many while hovering, so it's not render friendly. */\n\tconst onDragEnter = (e) => {\n\t\tboardRef.current.classList.add(\"drag\");\n\t\tconst el = e.target;\n\t\tif (el.classList.contains(\"drag\")) {\n\t\t\tel.classList.add(\"over\");\n\t\t}\n\t};\n\n\t// on leaving the drag over the column, remove the dotted border\n\tconst onDragLeave = (e) => {\n\t\tconst el = e.target;\n\t\tel.classList.remove(\"over\");\n\t};\n\n\t/* We get the data from transfer which is our task id and remove the dotted border. Since we added\n\ta pointer events none class on column children to prevent any drag events on children, we remove all the drag classes\n\tfrom the document since the drop event won't be called on the other columns where hover was done but item was not dropped.\n\tAlso we call the move task method which updates the task in new board and re renders.*/\n\tconst onDrop = (e) => {\n\t\te.stopPropagation();\n\t\tconst cardId = e.dataTransfer.getData(\"text/plain\");\n\t\tconst el = e.target;\n\t\tel.classList.remove(\"over\");\n\t\tArray.from(document.querySelectorAll(\".drag\")).forEach((el) =>\n\t\t\tel.classList.remove(\"drag\")\n\t\t);\n\t\tif (cardId) {\n\t\t\tonMoveTask(+cardId, list.id);\n\t\t}\n\t\treturn false;\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tref={boardRef}\n\t\t\tclassName={styles.board}\n\t\t\tonDragOver={onDragOver}\n\t\t\tonDragEnter={onDragEnter}\n\t\t\tonDragLeave={onDragLeave}\n\t\t\tonDrop={onDrop}\n\t\t>\n\t\t\t<h5 className={styles.board__header}>{list.boardLabel}</h5>\n\t\t\t<div className={styles.board__content}>\n\t\t\t\t{list.cards.map((item) => {\n\t\t\t\t\treturn <Card card={item} key={item.id} />;\n\t\t\t\t})}\n\t\t\t\t{newCard && (\n\t\t\t\t\t<Card card={newCard} isEditable={true} onBlurEvent={onBlurCard} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{!newCard && (\n\t\t\t\t<div className={styles.board__footer}>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={`${styles.board__footer__label} no-style-btn`}\n\t\t\t\t\t\tonClick={addNewCard}\n\t\t\t\t\t>\n\t\t\t\t\t\t+ Add another card\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Board;\n","const boardJSON = [\n\t{\n\t\tid: 1,\n\t\tboardLabel: \"Derrick\",\n\t\tcards: [\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tlabel: \"Build Lasers\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 2,\n\t\t\t\tlabel: \"Erich Uranium\",\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tid: 2,\n\t\tboardLabel: \"Maxwell\",\n\t\tcards: [\n\t\t\t{\n\t\t\t\tid: 3,\n\t\t\t\tlabel: \"Achieve Flux\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 4,\n\t\t\t\tlabel: \"Build Control System\",\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tid: 3,\n\t\tboardLabel: \"Zaza\",\n\t\tcards: [\n\t\t\t{\n\t\t\t\tid: 6,\n\t\t\t\tlabel: \"Monarch Round\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 7,\n\t\t\t\tlabel: \"Environmental tips\",\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tid: 4,\n\t\tboardLabel: \"Sam\",\n\t\tcards: [\n\t\t\t{\n\t\t\t\tid: 11,\n\t\t\t\tlabel: \"Build AI\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 8,\n\t\t\t\tlabel: \"Pollution tips\",\n\t\t\t}\n\t\t],\n\t},\n];\n\nexport default boardJSON;","import { useEffect, useState } from \"react\";\nimport boardJSON from 'data/boards';\nimport randomNumber from \"functions/randomNumberGen\";\n\nconst BOARD_KEY = \"board\";\n\nconst useBoards = () => {\n  const [data, setData] = useState();\n\t\n\t// check if board data exists in local, if not setup the sample data\n\tuseEffect(() => {\n\t\tconst board = localStorage.getItem(BOARD_KEY);\n\n\t\tif (board) {\n\t\t\tsetData(JSON.parse(board));\n\t\t} else {\n\t\t\tlocalStorage.setItem(BOARD_KEY, JSON.stringify(boardJSON));\n\t\t\tsetData(boardJSON);\n\t\t}\n\t}, []);\n\n\t/* to add a new task we add it to the array and generating a random id for the task so that it can be identified,\n\talthough this can be repeated, but considering an actual use case that is the database, it won't be possible. */\n\tconst addTask = (label, board_id) => {\n\t\tconst cloned = [...data];\n\t\tconst board = cloned.find((item) => item.id === board_id);\n\t\t// push the new task into cards list and update the local storage\n\t\tboard.cards.push({\n\t\t\tid: randomNumber(10, 10000),\n\t\t\tlabel,\n\t\t});\n\t\tsetData(cloned);\n\t\tlocalStorage.setItem(BOARD_KEY, JSON.stringify(cloned));\n\t}\n\n\t/* For moving the task, we first find the task being moved in the boards and splice it from the cards array and then\n\tfind the destination board and push the task into the cards of new board and set it to local storage.*/\n\tconst moveTask = (task_id, board_id) => {\n\t\tconst cloned = [...data];\n\t\tlet movedItem;\n\t\tcloned.forEach(board => {\n\t\t\tconst foundIndex = board.cards.findIndex(task => task.id === task_id);\n\t\t\tif (foundIndex > -1) {\n\t\t\t\t[movedItem] = board.cards.splice(foundIndex, 1);\n\t\t\t}\n\t\t})\n\t\tconst destinationBoard = cloned.find((item) => item.id === board_id);\n\t\t// push the new task into cards list and update the local storage\n\t\tdestinationBoard.cards.push(movedItem);\n\t\tsetData(cloned);\n\t\tlocalStorage.setItem(BOARD_KEY, JSON.stringify(cloned));\n\t};\n\n\treturn { data, addTask, moveTask };\n}\n\nexport default useBoards;","export default function randomNumber(minimum, maximum) {\n\treturn Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(1 1)\",\n  strokeWidth: 2\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  strokeOpacity: 0.5,\n  cx: 18,\n  cy: 18,\n  r: 18\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M36 18c0-9.94-8.06-18-18-18\"\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"rotate\",\n  from: \"0 18 18\",\n  to: \"360 18 18\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n}))));\n\nfunction SvgSpinner(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 64,\n    height: 64,\n    viewBox: \"0 0 38 38\",\n    stroke: \"#000\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSpinner);\nexport default __webpack_public_path__ + \"static/media/spinner.c88e6edb.svg\";\nexport { ForwardRef as ReactComponent };","import { ReactComponent as Spinner } from \"assets/images/spinner.svg\";\nimport styles from './Loader.module.scss';\n\nconst Loader = () => {\n\treturn (\n\t\t<div className={styles.loader}>\n\t\t\t<Spinner />\n\t\t</div>\n\t);\n};\n\nexport default Loader;\n","import styles from './Layout.module.scss';\nimport Board from 'containers/Board/Board';\nimport useBoards from 'hooks/useBoards';\nimport Loader from 'components/Loader/Loader';\n\nconst Layout = () => {\n  const { data: boardsData, addTask, moveTask } = useBoards();\n\n  if (!boardsData) {\n    return <Loader />;\n  }\n\n  const onAddTask = (label, board_id) => {\n    addTask(label, board_id);\n  }\n\n  const onMoveTask = (task_id, board_id) => {\n    moveTask(task_id, board_id);\n  }\n\n\treturn (\n\t\t<div className={styles.lists}>\n\t\t\t{boardsData.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div className={styles.lists__content} key={item.id}>\n\t\t\t\t\t\t<Board list={item} onAddTask={onAddTask} onMoveTask={onMoveTask} />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default Layout;\n","import CardsContainer from 'containers/Layout/Layout';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CardsContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}